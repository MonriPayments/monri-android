apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            buildConfigField "String", 'MONRI_SDK_VERSION', "\"${rootProject.ext.monriSdkVersion}\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "String", 'MONRI_SDK_VERSION', "\"${rootProject.ext.monriSdkVersion}\""
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api 'androidx.appcompat:appcompat:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    api 'androidx.annotation:annotation:1.3.0'

    //Retrofit
    api 'com.squareup.retrofit2:retrofit:2.9.0'

    //Retrofit converters
    api 'com.squareup.retrofit2:converter-jackson:2.9.0'

    api "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    api "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    // Api for this import because we use reflection to alter TextInputLayout
    api "com.android.support:design:${rootProject.ext.supportLibVersion}"

    compileOnly "javax.annotation:jsr250-api:${rootProject.ext.javaAnnotationVersion}"

    testImplementation "junit:junit:${rootProject.ext.junitVersion}"
    testImplementation "org.mockito:mockito-core:${rootProject.ext.mockitoCoreVersion}"
    testImplementation "org.robolectric:robolectric:${rootProject.ext.robolectricVersion}"

}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.monri'
                artifactId = 'monri-android'
                version = rootProject.ext.monriSdkVersion
                pom {
                    name = 'Monri'
                    description = 'Monri Android SDK'
                    url = 'https://github.com/MonriPayments/monri-android'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://github.com/MonriPayments/monri-android/blob/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'jasminsuljic'
                            name = 'Jasmin Suljic'
                            email = 'jasmin.suljic@monri.com'
                        }
                        developer {
                            id = 'adnanomerovic'
                            name = 'Adnan Omerovic'
                            email = 'adnan.omerovic@monri.com'
                        }
                    }
                    scm {
                        connection = 'https://github.com/MonriPayments/monri-android'
                        developerConnection = 'git@github.com:MonriPayments/monri-android.git'
                        url = 'https://github.com/MonriPayments/monri-android'
                    }
                }
            }
        }
        repositories {
            maven {
                name = 'SonaType'
                def releasesRepoUrlStaging = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
                def releasesRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/releases/' //without close and release on nexus
                url = rootProject.ext.monriSdkVersion.endsWith('SNAPSHOT') || System.getProperty("snapshot") ? snapshotsRepoUrl : releasesRepoUrlStaging
                credentials {
                    username project.findProperty("mavenCentralRepositoryUsername") ?: System.getenv('mavenCentralRepositoryUsername') ?: ''
                    password project.findProperty("mavenCentralRepositoryPassword") ?: System.getenv('mavenCentralRepositoryPassword') ?: ''
                }
            }
        }
    }
    signing {
        sign publishing.publications.release
    }
}